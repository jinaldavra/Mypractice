Question 1 : Write a Recursive function to calculate the nth Fibonacci number.

#include<stdio.h>
int fibo(int num){
    if(num == 0){
        return 0;
    }
    else if(num == 1){
        return 1;
    }
    else{
        return fibo(num-1) + fibo(num-2);
    }
}
int main(){
    int n = 9;
    printf("Fibonacci number at position %d is %d",n,fibo(n));
    return 0;
}

Question 2 : Write a Recursive function to find the sum of the first n natural numbers.

#include<stdio.h>
int sum(int num){
    if(num == 1){
        return 1;
    }
    else{
        return num + sum(num-1);
    }
}
int main(){
    printf("Sum of n : %d",sum(5));
    return 0;
}

Question 3 : Write a Recursive function to find the factorial of a given number n.

#include<stdio.h>
int fact(int num){
    if(num == 1){
        return 1;
    }
    else{
        return num * fact(num-1);
    } 
}
int main(){
    int n = 5;
    printf("Factoriral number of %d is %d",n,fact(n));
    return 0;
}

Question 4 : Write a Recursive function to calculate the sum of the digits of a given number.

#include<stdio.h>
int sum_of_digit(int num){
    if(num == 1){
        return 1;
    }
    else{
        return (num % 10) + sum_of_digit(num / 10);
    } 
}
int main(){
    int n = 12345;
    printf("Sum of digit %d is %d",n,sum_of_digit(n));
    return 0;
}

Question 5 : Write a Recursive function to find the greatest common divisor (GCD) of two numbers.

For example : 366 and 60
              366 = 60 * 6 + 6
              Answer is 6.

#include<stdio.h>
int gcd(int a,int b){
    if(b == 0){
        return a;
    }
    else{
        return (b,a % b);
    }
}
int main(){
    int n1 = 366, n2 = 60;
    int res = gcd(n1,n2);
    printf("GCD of %d and %d is %d",n1,n2,res);
    return 0;
}

Question 6 : Write a Recursive function to reverse a string.

#include<stdio.h>
#include<string.h>
int reverse(char str[],int index){
    int len = strlen(str);
    if(index < len){
        reverse(str,index + 1);
        printf("%c",str[index]);
    }
}
int main(){
    char a[] = "Jinal";
    reverse(a,0);
    return 0;
}

Question 7 : Write a Recursive function to determine if a given string is a palindrome.




